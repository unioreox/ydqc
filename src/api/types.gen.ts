// This file is auto-generated by @hey-api/openapi-ts

export type ApiResponseVoid = {
    code?: number;
    msg?: string;
    data?: {
        [key: string]: unknown;
    };
};

export type ApiResponseTeamInfo = {
    code?: number;
    msg?: string;
    data?: TeamInfo;
};

export type TeamInfo = {
    id?: string;
    name?: string;
    members?: Array<TeamMemberInfo>;
};

export type TeamMemberInfo = {
    id?: string;
    nickname?: string;
    avatar?: string;
};

export type ActivityRequest = {
    name?: string;
    limitNum?: number;
    description?: string;
    heroImg?: string;
    limitTime?: string;
};

export type ActivityVo = {
    id?: string;
    name?: string;
    curNum?: number;
    limitNum?: number;
    description?: string;
    heroImg?: string;
    hasApplied?: boolean;
    limitTime?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type ApiResponseActivityVo = {
    code?: number;
    msg?: string;
    data?: ActivityVo;
};

export type UserUpdateDto = {
    nickname: string;
    avatar: string;
    college: string;
    phone?: string;
};

export type ApiResponseUserVo = {
    code?: number;
    msg?: string;
    data?: UserVo;
};

export type UserVo = {
    id?: string;
    nickname?: string;
    avatar?: string;
    isBanned?: boolean;
    isAdmin?: boolean;
    idNumber?: string;
    college?: string;
    phone?: string;
    count?: number;
    isCompleted?: boolean;
    createdAt?: string;
    updatedAt?: string;
    bestRecord?: string;
};

export type ApiResponseString = {
    code?: number;
    msg?: string;
    data?: string;
};

export type ApiResponseTeamTempInfo = {
    code?: number;
    msg?: string;
    data?: TeamTempInfo;
};

export type TeamTempInfo = {
    id?: string;
    pwd?: string;
    createdAt?: string;
};

export type CheckInRequest = {
    data: string;
    state: string;
    fingerprint: string;
    timestamp: string;
};

export interface ActivityReviewVO {
    title: string;
    date: string; // Use string to represent LocalDateTime
    coverImage: string;
    markdown: string;
}


export type ApiResponseRecordVo = {
    code?: number;
    msg?: string;
    data?: RecordVo;
};

export type RecordVo = {
    id?: string;
    status?: 'PENDING' | 'FINISHED' | 'CANCELLED';
    startTime?: string;
    endTime?: string;
    isValid?: boolean;
    createdAt?: string;
    updatedAt?: string;
    totalMilliseconds?: string;
};

export type ApiResponseFeedbackVo = {
    code?: number;
    msg?: string;
    data?: FeedbackVo;
};

export type FeedbackVo = {
    id?: number;
    nickname?: string;
    content?: string;
    createTime?: number;
    updateTime?: number;
};

export type AdminVoLong = {
    accessToken?: string;
    expires?: number;
    refreshToken?: string;
    avatar?: string;
    username?: string;
    nickname?: string;
    roles?: Array<string>;
    permissions?: Array<string>;
};

export type ApiResponseAdminVoLong = {
    code?: number;
    msg?: string;
    data?: AdminVoLong;
};

export type ApiResponseWxConfig = {
    code?: number;
    msg?: string;
    data?: WxConfig;
};

export type WxConfig = {
    appId?: string;
    timestamp?: string;
    nonceStr?: string;
    signature?: string;
};

export type ApiResponsePageResponseListUserAdminVo = {
    code?: number;
    msg?: string;
    data?: PageResponseListUserAdminVo;
};

export type PageResponseListUserAdminVo = {
    total?: number;
    pageSize?: number;
    current?: number;
    data?: Array<UserAdminVo>;
};

export type UserAdminVo = {
    id?: string;
    username?: string;
    nickname?: string;
    avatar?: string;
    realName?: string;
    roles?: Array<string>;
    isBanned?: boolean;
    idNumber?: string;
    college?: string;
    phone?: string;
    isCompleted?: boolean;
    count?: number;
    bestRecord?: string;
    oauthProvider?: string;
    oauthId?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type ApiResponseMyTeamPreview = {
    code?: number;
    msg?: string;
    data?: MyTeamPreview;
};

export type MyTeamPreview = {
    teamId?: string;
    inTeam?: boolean;
};

export type SseEmitter = {
    timeout?: number;
};

export type ApiResponseListRecordVo = {
    code?: number;
    msg?: string;
    data?: Array<RecordVo>;
};

export type ApiResponsePageResponseListRecordExportVo = {
    code?: number;
    msg?: string;
    data?: PageResponseListRecordExportVo;
};

export type PageResponseListRecordExportVo = {
    total?: number;
    pageSize?: number;
    current?: number;
    data?: Array<RecordExportVo>;
};

export type RecordExportVo = {
    id?: string;
    userName?: string;
    status?: 'PENDING' | 'FINISHED' | 'CANCELLED';
    idNumber?: string;
    phone?: string;
    startTime?: string;
    endTime?: string;
    isValid?: boolean;
    createdAt?: string;
    updatedAt?: string;
    totalMilliseconds?: string;
};

export type ApiResponseRecordExportVo = {
    code?: number;
    msg?: string;
    data?: RecordExportVo;
};

export type ApiResponseLeaderBoardVoUserCountLeaderBoardVo = {
    code?: number;
    msg?: string;
    data?: LeaderBoardVoUserCountLeaderBoardVo;
};

export type LeaderBoardVoUserCountLeaderBoardVo = {
    leaderBoard?: Array<UserCountLeaderBoardVo>;
    lastUpdateTime?: string;
};

export type UserCountLeaderBoardVo = {
    userName?: string;
    userAvatar?: string;
    userCount?: number;
};

export type ApiResponseLeaderBoardVoUserBestScoreLeaderBoardVo = {
    code?: number;
    msg?: string;
    data?: LeaderBoardVoUserBestScoreLeaderBoardVo;
};

export type LeaderBoardVoUserBestScoreLeaderBoardVo = {
    leaderBoard?: Array<UserBestScoreLeaderBoardVo>;
    lastUpdateTime?: string;
};

export type UserBestScoreLeaderBoardVo = {
    userName?: string;
    userAvatar?: string;
    userBestScore?: number;
    readonly userBestScoreFormatted?: string;
};

export type ApiResponseLeaderBoardVoCollegeCountLeaderBoardVo = {
    code?: number;
    msg?: string;
    data?: LeaderBoardVoCollegeCountLeaderBoardVo;
};

export type CollegeCountLeaderBoardVo = {
    collegeName?: string;
    collegeCount?: number;
    collegePercent?: string;
};

export type LeaderBoardVoCollegeCountLeaderBoardVo = {
    leaderBoard?: Array<CollegeCountLeaderBoardVo>;
    lastUpdateTime?: string;
};

export type ApiResponseListHistoryItem = {
    code?: number;
    msg?: string;
    data?: Array<HistoryItem>;
};

export type HistoryItem = {
    data?: string;
    activeUser?: number;
    completionUser?: number;
    teacher?: number;
};

export type ApiResponseFeedbackVo2 = {
    code?: number;
    msg?: string;
    data?: Array<FeedbackVo>;
};

export type ApiResponseListCollegeVo = {
    code?: number;
    msg?: string;
    data?: Array<CollegeVo>;
};

export type CollegeVo = {
    id?: number;
    name?: string;
};

export type ApiResponseListCheckPoint = {
    code?: number;
    msg?: string;
    data?: Array<CheckPoint>;
};

export type CheckPoint = {
    id?: number;
    isEnd?: boolean;
    name?: string;
    latitude?: number;
    longitude?: number;
    secret1?: string;
    secret2?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type ApiResponseCertificateVo = {
    code?: number;
    msg?: string;
    data?: CertificateVo;
};

export type CertificateVo = {
    id?: string;
    userName?: string;
    totalMilliseconds?: string;
    ranking?: number;
    createAt?: string;
    updateAt?: string;
};

export type ApiResponseListMapStringObject = {
    code?: number;
    msg?: string;
    data?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
};

export type ApiResponseListActivityVo = {
    code?: number;
    msg?: string;
    data?: Array<ActivityVo>;
};

export type ApiResponseListUserAdminVo = {
    code?: number;
    msg?: string;
    data?: Array<UserAdminVo>;
};

export type LeaveTeamData = {
    body?: never;
    path?: never;
    query: {
        teamId: number;
    };
    url: '/team/leave';
};

export type LeaveTeamResponses = {
    /**
     * OK
     */
    200: ApiResponseVoid;
};

export type LeaveTeamResponse = LeaveTeamResponses[keyof LeaveTeamResponses];

export type StopTeamData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/team/current/stop';
};

export type StopTeamResponses = {
    /**
     * OK
     */
    200: ApiResponseTeamInfo;
};

export type StopTeamResponse = StopTeamResponses[keyof StopTeamResponses];

export type DeleteActivityData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/activities/{id}';
};

export type DeleteActivityResponses = {
    /**
     * OK
     */
    200: ApiResponseVoid;
};

export type DeleteActivityResponse = DeleteActivityResponses[keyof DeleteActivityResponses];

export type GetActivityByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/activities/{id}';
};

export type GetActivityByIdResponses = {
    /**
     * OK
     */
    200: ApiResponseActivityVo;
};

export type GetActivityByIdResponse = GetActivityByIdResponses[keyof GetActivityByIdResponses];

export type UpdateActivityData = {
    body: ActivityRequest;
    path: {
        id: number;
    };
    query?: never;
    url: '/activities/{id}';
};

export type UpdateActivityResponses = {
    /**
     * OK
     */
    200: ApiResponseActivityVo;
};

export type UpdateActivityResponse = UpdateActivityResponses[keyof UpdateActivityResponses];

export type UpdateApiData = {
    body: UserUpdateDto;
    path?: never;
    query?: never;
    url: '/user/update';
};

export type UpdateApiResponses = {
    /**
     * OK
     */
    200: ApiResponseUserVo;
};

export type UpdateApiResponse = UpdateApiResponses[keyof UpdateApiResponses];

export type LoginApiData = {
    body?: never;
    path?: never;
    query: {
        code: string;
    };
    url: '/user/login';
};

export type LoginApiResponses = {
    /**
     * OK
     */
    200: ApiResponseUserVo;
};

export type LoginApiResponse = LoginApiResponses[keyof LoginApiResponses];

export type HandleFileUploadData = {
    body?: {
        file: Blob | File;
    };
    path?: never;
    query?: never;
    url: '/upload';
};

export type HandleFileUploadResponses = {
    /**
     * OK
     */
    200: ApiResponseString;
};

export type HandleFileUploadResponse = HandleFileUploadResponses[keyof HandleFileUploadResponses];

export type GetMyTeamPreviewData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/team';
};

export type GetMyTeamPreviewResponses = {
    /**
     * OK
     */
    200: ApiResponseMyTeamPreview;
};

export type GetMyTeamPreviewResponse = GetMyTeamPreviewResponses[keyof GetMyTeamPreviewResponses];

export type CreateTeamRequestData = {
    body?: never;
    path?: never;
    query: {
        teamName: string;
    };
    url: '/team';
};

export type CreateTeamRequestResponses = {
    /**
     * OK
     */
    200: ApiResponseTeamTempInfo;
};

export type CreateTeamRequestResponse = CreateTeamRequestResponses[keyof CreateTeamRequestResponses];

export type JoinTeamData = {
    body?: never;
    path?: never;
    query: {
        teamCode: string;
    };
    url: '/team/join';
};

export type JoinTeamResponses = {
    /**
     * OK
     */
    200: ApiResponseVoid;
};

export type JoinTeamResponse = JoinTeamResponses[keyof JoinTeamResponses];

export type ListRecordData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/record';
};

export type ListRecordResponses = {
    /**
     * OK
     */
    200: ApiResponseListRecordVo;
};

export type ListRecordResponse = ListRecordResponses[keyof ListRecordResponses];

export type DoCheckinData = {
    body: CheckInRequest;
    path?: never;
    query?: never;
    url: '/record';
};

export type DoCheckinResponses = {
    /**
     * OK
     */
    200: ApiResponseRecordVo;
};

export type DoCheckinResponse = DoCheckinResponses[keyof DoCheckinResponses];

export type ManualAddRecordData = {
    body?: never;
    path?: never;
    query: {
        idNumber: string;
        endTime: string;
    };
    url: '/record/manual';
};

export type ManualAddRecordResponses = {
    /**
     * OK
     */
    200: ApiResponseRecordVo;
};

export type ManualAddRecordResponse = ManualAddRecordResponses[keyof ManualAddRecordResponses];

export type GetUserFeedbackData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/feedback';
};

export type GetUserFeedbackResponses = {
    /**
     * OK
     */
    200: ApiResponseFeedbackVo2;
};

export type GetUserFeedbackResponse = GetUserFeedbackResponses[keyof GetUserFeedbackResponses];

export type AddFeedbackData = {
    body?: never;
    path?: never;
    query: {
        content: string;
    };
    url: '/feedback';
};

export type AddFeedbackResponses = {
    /**
     * OK
     */
    200: ApiResponseFeedbackVo;
};

export type AddFeedbackResponse = AddFeedbackResponses[keyof AddFeedbackResponses];

export type UpdatePasswdData = {
    body?: never;
    path?: never;
    query: {
        oldPasswd: string;
        newPasswd: string;
    };
    url: '/admin/update-passwd';
};

export type UpdatePasswdResponses = {
    /**
     * OK
     */
    200: ApiResponseUserVo;
};

export type UpdatePasswdResponse = UpdatePasswdResponses[keyof UpdatePasswdResponses];

export type RefreshTokenData = {
    body?: never;
    path?: never;
    query: {
        refreshToken: string;
    };
    url: '/admin/refresh-token';
};

export type RefreshTokenResponses = {
    /**
     * OK
     */
    200: ApiResponseAdminVoLong;
};

export type RefreshTokenResponse = RefreshTokenResponses[keyof RefreshTokenResponses];

export type LoginApi1Data = {
    body?: never;
    path?: never;
    query: {
        userName: string;
        password: string;
    };
    url: '/admin/login';
};

export type LoginApi1Responses = {
    /**
     * OK
     */
    200: ApiResponseAdminVoLong;
};

export type LoginApi1Response = LoginApi1Responses[keyof LoginApi1Responses];

export type GetAllActivitiesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/activities';
};

export type GetAllActivitiesResponses = {
    /**
     * OK
     */
    200: ApiResponseListActivityVo;
};

export type getReviewContentResponses = {
    /**
     * OK
     */
    200: ActivityReviewVo;
}

export type getReviewContentResponse = getReviewContentResponses[keyof getReviewContentResponses];

export type ActivityReviewVo = {
    code?: number;
    msg?: string;
    data?: ActivityReviewVO;
}

export type GetAllActivitiesResponse = GetAllActivitiesResponses[keyof GetAllActivitiesResponses];

export type CreateActivityData = {
    body: ActivityRequest;
    path?: never;
    query?: never;
    url: '/activities';
};

export type CreateActivityResponses = {
    /**
     * OK
     */
    200: ApiResponseActivityVo;
};

export type CreateActivityResponse = CreateActivityResponses[keyof CreateActivityResponses];

export type CancelApplyActivityData = {
    body?: never;
    path?: never;
    query: {
        activityId: string;
    };
    url: '/activities/apply';
};

export type CancelApplyActivityResponses = {
    /**
     * OK
     */
    200: ApiResponseVoid;
};

export type CancelApplyActivityResponse = CancelApplyActivityResponses[keyof CancelApplyActivityResponses];

export type ApplyActivityData = {
    body?: never;
    path?: never;
    query: {
        activityId: string;
    };
    url: '/activities/apply';
};

export type ApplyActivityResponses = {
    /**
     * OK
     */
    200: ApiResponseVoid;
};

export type ApplyActivityResponse = ApplyActivityResponses[keyof ApplyActivityResponses];

export type GetWxConfigData = {
    body?: never;
    path?: never;
    query: {
        url: string;
    };
    url: '/wx/config';
};

export type GetWxConfigResponses = {
    /**
     * OK
     */
    200: ApiResponseWxConfig;
};

export type GetWxConfigResponse = GetWxConfigResponses[keyof GetWxConfigResponses];

export type InfoApiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/user/info';
};

export type InfoApiResponses = {
    /**
     * OK
     */
    200: ApiResponseUserVo;
};

export type InfoApiResponse = InfoApiResponses[keyof InfoApiResponses];

export type ExportAllUsersToExcelApiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/user/exportAllUsers';
};

export type ExportAllUsersToExcelApiResponses = {
    /**
     * OK
     */
    200: string;
};

export type ExportAllUsersToExcelApiResponse = ExportAllUsersToExcelApiResponses[keyof ExportAllUsersToExcelApiResponses];

export type ListAllUserData = {
    body?: never;
    path?: never;
    query: {
        page: number;
        pageSize: number;
    };
    url: '/user/all';
};

export type ListAllUserResponses = {
    /**
     * OK
     */
    200: ApiResponsePageResponseListUserAdminVo;
};

export type ListAllUserResponse = ListAllUserResponses[keyof ListAllUserResponses];

export type GetTeamInfoData = {
    body?: never;
    path: {
        teamId: number;
    };
    query?: never;
    url: '/team/{teamId}';
};

export type GetTeamInfoResponses = {
    /**
     * OK
     */
    200: ApiResponseTeamInfo;
};

export type GetTeamInfoResponse = GetTeamInfoResponses[keyof GetTeamInfoResponses];

export type StreamTeamUpdatesData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/team/stream/{id}';
};

export type StreamTeamUpdatesResponses = {
    /**
     * OK
     */
    200: SseEmitter;
};

export type StreamTeamUpdatesResponse = StreamTeamUpdatesResponses[keyof StreamTeamUpdatesResponses];

export type ListTodayValidRecordApiData = {
    body?: never;
    path?: never;
    query: {
        page: number;
        pageSize: number;
    };
    url: '/record/today';
};

export type ListTodayValidRecordApiResponses = {
    /**
     * OK
     */
    200: ApiResponsePageResponseListRecordExportVo;
};

export type ListTodayValidRecordApiResponse = ListTodayValidRecordApiResponses[keyof ListTodayValidRecordApiResponses];

export type ListTodayValidRecordExcelApiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/record/today/excel';
};

export type ListTodayValidRecordExcelApiResponses = {
    /**
     * OK
     */
    200: string;
};

export type ListTodayValidRecordExcelApiResponse = ListTodayValidRecordExcelApiResponses[keyof ListTodayValidRecordExcelApiResponses];

export type GetLuckyGuyData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/record/lucky';
};

export type GetLuckyGuyResponses = {
    /**
     * OK
     */
    200: ApiResponseRecordExportVo;
};

export type GetLuckyGuyResponse = GetLuckyGuyResponses[keyof GetLuckyGuyResponses];

export type DoLuckDrawData = {
    body?: never;
    path?: never;
    query: {
        count: number;
    };
    url: '/record/luckDraw';
};

export type DoLuckDrawResponses = {
    /**
     * OK
     */
    200: string;
};

export type DoLuckDrawResponse = DoLuckDrawResponses[keyof DoLuckDrawResponses];

export type GetLastRecordData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/record/last';
};

export type GetLastRecordResponses = {
    /**
     * OK
     */
    200: ApiResponseRecordVo;
};

export type GetLastRecordResponse = GetLastRecordResponses[keyof GetLastRecordResponses];

export type ListRecordByTimeData = {
    body?: never;
    path?: never;
    query: {
        startTime: string;
        endTime: string;
        page: number;
        size: number;
    };
    url: '/record/byTime';
};

export type ListRecordByTimeResponses = {
    /**
     * OK
     */
    200: ApiResponsePageResponseListRecordExportVo;
};

export type ListRecordByTimeResponse = ListRecordByTimeResponses[keyof ListRecordByTimeResponses];

export type ListRecordByTime1Data = {
    body?: never;
    path?: never;
    query: {
        startTime: string;
        endTime: string;
    };
    url: '/record/byTime/excel';
};

export type ListRecordByTime1Responses = {
    /**
     * OK
     */
    200: string;
};

export type ListRecordByTime1Response = ListRecordByTime1Responses[keyof ListRecordByTime1Responses];

export type ListAllRecordApiData = {
    body?: never;
    path?: never;
    query: {
        page: number;
        pageSize: number;
    };
    url: '/record/all';
};

export type ListAllRecordApiResponses = {
    /**
     * OK
     */
    200: ApiResponsePageResponseListRecordExportVo;
};

export type ListAllRecordApiResponse = ListAllRecordApiResponses[keyof ListAllRecordApiResponses];

export type ListAllValidRecordApiData = {
    body?: never;
    path?: never;
    query: {
        page: number;
        pageSize: number;
    };
    url: '/record/all/valid';
};

export type ListAllValidRecordApiResponses = {
    /**
     * OK
     */
    200: ApiResponsePageResponseListRecordExportVo;
};

export type ListAllValidRecordApiResponse = ListAllValidRecordApiResponses[keyof ListAllValidRecordApiResponses];

export type ListAllValidRecordApi1Data = {
    body?: never;
    path?: never;
    query?: never;
    url: '/record/all/excel';
};

export type ListAllValidRecordApi1Responses = {
    /**
     * OK
     */
    200: string;
};

export type ListAllValidRecordApi1Response = ListAllValidRecordApi1Responses[keyof ListAllValidRecordApi1Responses];

export type GetUserCountLeaderBoardData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/leaderboard/userCount';
};

export type GetUserCountLeaderBoardResponses = {
    /**
     * OK
     */
    200: ApiResponseLeaderBoardVoUserCountLeaderBoardVo;
};

export type GetUserCountLeaderBoardResponse = GetUserCountLeaderBoardResponses[keyof GetUserCountLeaderBoardResponses];

export type GetTop30UsersByBestScoreData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/leaderboard/top30';
};

export type GetTop30UsersByBestScoreResponses = {
    /**
     * OK
     */
    200: ApiResponseLeaderBoardVoUserBestScoreLeaderBoardVo;
};

export type GetTop30UsersByBestScoreResponse = GetTop30UsersByBestScoreResponses[keyof GetTop30UsersByBestScoreResponses];

export type GetCollegeLeaderBoardData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/leaderboard/college';
};

export type GetCollegeLeaderBoardResponses = {
    /**
     * OK
     */
    200: ApiResponseLeaderBoardVoCollegeCountLeaderBoardVo;
};

export type GetCollegeLeaderBoardResponse = GetCollegeLeaderBoardResponses[keyof GetCollegeLeaderBoardResponses];

export type GetHistoryData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/history';
};

export type GetHistoryResponses = {
    /**
     * OK
     */
    200: ApiResponseListHistoryItem;
};

export type GetHistoryResponse = GetHistoryResponses[keyof GetHistoryResponses];

export type GetFeedbackData = {
    body?: never;
    path?: never;
    query: {
        page: number;
        size: number;
    };
    url: '/feedback/all';
};

export type GetFeedbackResponses = {
    /**
     * OK
     */
    200: ApiResponseFeedbackVo2;
};

export type GetFeedbackResponse = GetFeedbackResponses[keyof GetFeedbackResponses];

export type ListCollegeApiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/college';
};

export type ListCollegeApiResponses = {
    /**
     * OK
     */
    200: ApiResponseListCollegeVo;
};

export type ListCollegeApiResponse = ListCollegeApiResponses[keyof ListCollegeApiResponses];

export type ListCheckPointData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/checkPoint';
};

export type ListCheckPointResponses = {
    /**
     * OK
     */
    200: ApiResponseListCheckPoint;
};

export type ListCheckPointResponse = ListCheckPointResponses[keyof ListCheckPointResponses];

export type GetCertificateByUserIdApiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/certificate';
};

export type GetCertificateByUserIdApiResponses = {
    /**
     * OK
     */
    200: ApiResponseCertificateVo;
};

export type GetCertificateByUserIdApiResponse = GetCertificateByUserIdApiResponses[keyof GetCertificateByUserIdApiResponses];

export type GetCertificateByIdApiData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/certificate/{id}';
};

export type GetCertificateByIdApiResponses = {
    /**
     * OK
     */
    200: ApiResponseCertificateVo;
};

export type GetCertificateByIdApiResponse = GetCertificateByIdApiResponses[keyof GetCertificateByIdApiResponses];

export type GetAsyncRoutesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/get-async-routes';
};

export type GetAsyncRoutesResponses = {
    /**
     * OK
     */
    200: ApiResponseListMapStringObject;
};

export type GetAsyncRoutesResponse = GetAsyncRoutesResponses[keyof GetAsyncRoutesResponses];

export type GetActivityRecordsData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/activities/{id}/records';
};

export type GetActivityRecordsResponses = {
    /**
     * OK
     */
    200: ApiResponseListUserAdminVo;
};

export type GetActivityRecordsResponse = GetActivityRecordsResponses[keyof GetActivityRecordsResponses];

export type DeleteTeamData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/team/current/cancel';
};

export type DeleteTeamResponses = {
    /**
     * OK
     */
    200: ApiResponseTeamInfo;
};

export type DeleteTeamResponse = DeleteTeamResponses[keyof DeleteTeamResponses];

export type CancelCheckinData = {
    body?: never;
    path: {
        recordId: string;
    };
    query?: never;
    url: '/record/{recordId}';
};

export type CancelCheckinResponses = {
    /**
     * OK
     */
    200: ApiResponseString;
};

export type CancelCheckinResponse = CancelCheckinResponses[keyof CancelCheckinResponses];

export type ClientOptions = {
    baseURL: 'http://127.0.0.1:8080' | (string & {});
};